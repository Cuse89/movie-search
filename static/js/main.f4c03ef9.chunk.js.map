{"version":3,"sources":["components/pagination/Pagination.module.scss","components/input-form/InputForm.module.scss","hocs/withGoBack.module.scss","pages/movie-page/MoviePage.module.scss","components/header/Header.module.scss","components/movie-item/MovieItem.module.scss","pages/search-page/SearchPage.module.scss","utils/helpers.js","utils/constants.js","hooks/useMoviesResults.js","components/input-form/index.js","components/pagination/index.js","components/results-list/index.js","components/movie-item/index.js","components/loader/index.js","pages/search-page/index.js","components/movie-image/index.js","components/movie-description/index.js","hocs/withBackArrow.js","hooks/useMovie.js","pages/movie-page/index.js","components/header/index.js","pages/not-found-page/index.js","pages/app/index.js","serviceWorker.js","index.js","components/loader/Loader.module.scss"],"names":["module","exports","getUrlSearchParam","key","queryString","window","location","search","URLSearchParams","get","BASE_URL","API_KEY","FETCH_STATUSES","useMoviesResults","useState","movies","setMovies","page","totalPages","totalResults","pagination","setPagination","fetchStatus","setFetchStatus","hasError","setHasError","getMovies","queryParams","params","urlParams","Object","keys","map","paramKey","join","url","fetch","then","res","json","response","results","total_results","total_pages","length","movie","id","title","modelMovies","handleSetResponse","catch","err","InputForm","inputType","placeholder","autoComplete","onChange","onSubmit","submitText","validateInput","label","inputValue","setInputValue","isValid","className","styles","root","e","preventDefault","type","target","value","submit","disabled","defaultProps","Pagination","onPreviousPageClick","onNextPageClick","leftArrow","icon","faArrowLeft","onClick","rightArrow","faArrowRight","ResultsList","resultItem","onPaginationChange","resultsPerPage","noResultsText","errorMessage","showPagination","showNoResultsMessage","showErrorMessage","items","resultsAmount","i","push","getResultsList","MovieItem","memo","Loader","show","size","color","isContained","delay","children","isDelaying","setIsDelaying","imgClassName","cx","image","useEffect","isSubscribed","setTimeout","contained","src","alt","SearchPage","history","useQueryState","query","setQuery","setPage","console","log","onMovieClick","showTitle","pixelSize","small","medium","large","MovieImage","path","MovieDescription","overview","posterPath","withBackArrow","withText","props","WrappedComponent","goBack","goBackText","useMovie","setMovie","notFound","setNotFound","getMovie","status_code","poster_path","modelResponse","useHistory","useParams","link","Header","to","NotFoundPage","App","exact","render","component","MoviePage","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f4c03ef9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Pagination_root__3lGdY\",\"leftArrow\":\"Pagination_leftArrow__2eMcd\",\"rightArrow\":\"Pagination_rightArrow__2ExW5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InputForm_root__3bnSa\",\"submit\":\"InputForm_submit__Dtu_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goBack\":\"withGoBack_goBack__1_R3d\",\"goBackText\":\"withGoBack_goBackText__3dGnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MoviePage_root__UNp6Z\",\"link\":\"MoviePage_link__1uF9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__uYivO\",\"title\":\"Header_title__3s_xf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MovieItem_root__cYwCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchPage_root__uMsEA\"};","export const createUrlParams = params =>\r\n    Object.keys(params)\r\n        .map(paramKey => `${paramKey}=${params[paramKey]}`)\r\n        .join(\"&\");\r\n\r\nexport const getUrlSearchParam = key => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(key);\r\n};","export const BASE_URL = \"https://api.themoviedb.org/3/\";\r\nexport const API_KEY = \"c9699c83834bc31ef87390d9331e4c96\";\r\nexport const RESULTS_INTERVALS = [5, 10, 20];\r\nexport const DEFAULT_RESULTS_AMOUNT = 20;\r\nexport const FETCH_STATUSES = {\r\n  READY: \"ready\",\r\n  FETCHING: \"fetching\",\r\n  COMPLETE: \"complete\"\r\n};\r\n","import { useState } from \"react\";\r\nimport { createUrlParams, getUrlSearchParam } from \"../utils/helpers\";\r\nimport { API_KEY, BASE_URL, FETCH_STATUSES } from \"../utils/constants\";\r\n\r\nconst useMoviesResults = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    page: getUrlSearchParam(\"page\") || 1,\r\n    totalPages: 0,\r\n    totalResults: 0\r\n  });\r\n  const [fetchStatus, setFetchStatus] = useState(FETCH_STATUSES.READY);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const modelMovies = movies =>\r\n    // only obtain required values\r\n    movies.map(movie => {\r\n      const { id, title } = movie;\r\n      return { id, title };\r\n    });\r\n\r\n  const handleSetResponse = response => {\r\n    const { results, page, total_results, total_pages } = response;\r\n    if (results.length > 0) {\r\n      setMovies(modelMovies(results));\r\n    } else {\r\n      setMovies([]);\r\n    }\r\n    setPagination({\r\n      page,\r\n      totalPages: total_pages,\r\n      totalResults: total_results\r\n    });\r\n  };\r\n\r\n  const getMovies = queryParams => {\r\n    const urlParams = createUrlParams(queryParams);\r\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&${urlParams}`;\r\n    setFetchStatus(\"fetching\");\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        handleSetResponse(response);\r\n        setFetchStatus(FETCH_STATUSES.COMPLETE);\r\n      })\r\n      .catch(err => {\r\n        setFetchStatus(FETCH_STATUSES.COMPLETE);\r\n        // handle other error actions here\r\n        setHasError(true);\r\n      });\r\n  };\r\n\r\n  return { movies, getMovies, pagination, fetchStatus, hasError };\r\n};\r\n\r\nexport default useMoviesResults;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./InputForm.module.scss\";\r\n\r\nconst InputForm = ({\r\n  inputType,\r\n  placeholder,\r\n  autoComplete,\r\n  onChange,\r\n  onSubmit,\r\n  submitText,\r\n  validateInput,\r\n  label\r\n}) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const isValid = validateInput(inputValue);\r\n  const handleOnChange = e => {\r\n    e.preventDefault();\r\n    onChange(e.target.value);\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleOnSubmit = e => {\r\n    e.preventDefault();\r\n    if (onSubmit) {\r\n      onSubmit(inputValue);\r\n      setInputValue(\"\");\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form className={styles.root} onSubmit={handleOnSubmit}>\r\n      {label && <label>{label}</label>}\r\n      <input\r\n        type={inputType}\r\n        onChange={handleOnChange}\r\n        placeholder={placeholder}\r\n        value={inputValue}\r\n        autoComplete={autoComplete}\r\n      />\r\n      {onSubmit && isValid && (\r\n        <input\r\n          className={styles.submit}\r\n          type=\"submit\"\r\n          value={submitText}\r\n          disabled={!isValid}\r\n        />\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nInputForm.defaultProps = {\r\n  inputType: \"text\",\r\n  placeholder: \"\",\r\n  autoComplete: \"off\",\r\n  onChange: () => {},\r\n  submitText: \"Submit\",\r\n  validateInput: () => true,\r\n  label: \"\"\r\n};\r\n\r\nInputForm.propTypes = {\r\n  inputType: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  autoComplete: PropTypes.oneOf([\"on\", \"off\"]),\r\n  onChange: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  submitText: PropTypes.string,\r\n  validateInput: PropTypes.func,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default InputForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome/index\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport styles from \"./Pagination.module.scss\";\r\n\r\nconst Pagination = ({\r\n  page,\r\n  onPreviousPageClick,\r\n  onNextPageClick,\r\n  totalPages\r\n}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      {page > 1 && (\r\n        <FontAwesomeIcon\r\n          className={styles.leftArrow}\r\n          icon={faArrowLeft}\r\n          onClick={onPreviousPageClick}\r\n        />\r\n      )}\r\n      Page {page} out of {totalPages}\r\n      {page < totalPages && (\r\n        <FontAwesomeIcon\r\n          className={styles.rightArrow}\r\n          icon={faArrowRight}\r\n          onClick={onNextPageClick}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  onPreviousPageClick: PropTypes.func.isRequired,\r\n  onNextPageClick: PropTypes.func.isRequired,\r\n  totalPages: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Pagination from \"components/pagination\";\r\n\r\nconst ResultsList = ({\r\n  className,\r\n  results,\r\n  resultItem,\r\n  onPaginationChange,\r\n  resultsPerPage,\r\n  totalResults,\r\n  totalPages,\r\n  page,\r\n  noResultsText,\r\n  hasError,\r\n  errorMessage\r\n}) => {\r\n  const showPagination = resultsPerPage && results.length < totalResults;\r\n  const getResultsList = () => {\r\n    // Used for loop rather than map, as to not iterate unnecessarily if results length is greater than resultsPerPage\r\n    const items = [];\r\n    const resultsAmount =\r\n      results.length < resultsPerPage ? results.length : resultsPerPage;\r\n    for (let i = 0; i < resultsAmount; i++) {\r\n      items.push(resultItem(results[i]));\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const onPreviousPageClick = () => {\r\n    onPaginationChange(page - 1);\r\n  };\r\n\r\n  const onNextPageClick = () => {\r\n    onPaginationChange(page + 1);\r\n  };\r\n\r\n  const pagination = (\r\n    <Pagination\r\n      onPreviousPageClick={onPreviousPageClick}\r\n      onNextPageClick={onNextPageClick}\r\n      page={page}\r\n      totalPages={totalPages}\r\n    />\r\n  );\r\n\r\n  const showNoResultsMessage =\r\n    noResultsText && results.length === 0 && !hasError;\r\n  const showErrorMessage = hasError && errorMessage;\r\n\r\n  return (\r\n    <div className={className}>\r\n      {showPagination && pagination}\r\n      {results.length > 0 && getResultsList()}\r\n      {showPagination && pagination}\r\n      {showNoResultsMessage && <h3>{noResultsText}</h3>}\r\n      {showErrorMessage && <h3>{errorMessage}</h3>}\r\n    </div>\r\n  );\r\n};\r\n\r\nResultsList.defaultProps = {\r\n  results: [],\r\n  onPaginationChange: () => {},\r\n  resultsPerPage: 10,\r\n  noResultsText: \"No results\",\r\n  errorMessage: \"An error has occurred.\"\r\n};\r\n\r\nResultsList.propTypes = {\r\n  className: PropTypes.string,\r\n  results: PropTypes.array,\r\n  resultItem: PropTypes.node.isRequired,\r\n  onPaginationChange: PropTypes.func,\r\n  resultsPerPage: PropTypes.number,\r\n  totalResults: PropTypes.number,\r\n  totalPages: PropTypes.number,\r\n  page: PropTypes.number,\r\n  noResultsText: PropTypes.string,\r\n  hasError: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.string\r\n};\r\n\r\nexport default ResultsList;\r\n","import React, { memo } from \"react\";\r\nimport styles from \"./MovieItem.module.scss\";\r\n\r\nconst MovieItem = memo(({ id, title, onClick }) => (\r\n  <div className={styles.root} onClick={() => onClick(id)}>\r\n    {title}\r\n  </div>\r\n));\r\n\r\nexport default MovieItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./Loader.module.scss\";\r\n\r\nconst Loader = ({ show, size, color, isContained, delay, children }) => {\r\n  const [isDelaying, setIsDelaying] = useState(delay > 0);\r\n  const imgClassName = cx([styles.image], [styles[size]], [styles[color]]);\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    if (show && delay > 0) {\r\n      setTimeout(() => {\r\n        if (isSubscribed) {\r\n          setIsDelaying(false);\r\n        }\r\n      }, delay);\r\n    }\r\n    return () => (isSubscribed = false);\r\n  }, [delay, show]);\r\n\r\n  // Do not show the loader if a delay period is set\r\n  if (show && !isDelaying) {\r\n    return (\r\n      <div className={cx({ [styles.contained]: isContained })}>\r\n        <img className={imgClassName} src=\"/tail-spin.svg\" alt=\"loader\" />\r\n      </div>\r\n    );\r\n  }\r\n  return children;\r\n};\r\n\r\nLoader.defaultProps = {\r\n  size: \"medium\",\r\n  color: \"darkBlue\",\r\n  isContained: false,\r\n  delay: 500\r\n};\r\n\r\nLoader.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\r\n  color: PropTypes.oneOf([\"blue\", \"darkBlue\"]),\r\n  isContained: PropTypes.bool,\r\n  delay: PropTypes.number\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { useQueryState } from \"use-location-state\";\r\nimport useMoviesResults from \"hooks/useMoviesResults\";\r\nimport InputForm from \"components/input-form\";\r\nimport ResultsList from \"components/results-list\";\r\nimport MovieItem from \"components/movie-item\";\r\nimport { DEFAULT_RESULTS_AMOUNT, FETCH_STATUSES } from \"utils/constants\";\r\nimport Loader from \"components/loader\";\r\n\r\nimport styles from \"./SearchPage.module.scss\";\r\n\r\nconst SearchPage = ({ history }) => {\r\n  const {\r\n    getMovies,\r\n    movies,\r\n    pagination,\r\n    fetchStatus,\r\n    hasError\r\n  } = useMoviesResults();\r\n  const { totalResults, totalPages } = pagination;\r\n  const [query, setQuery] = useQueryState(\"query\", \"\");\r\n  const [page, setPage] = useQueryState(\"page\", 1);\r\n\r\n  console.log(\"movies\", movies);\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      getMovies({ query, page });\r\n    }\r\n  }, [query, page]);\r\n\r\n  const onQueryChange = query => {\r\n    setPage(1);\r\n    setQuery(query);\r\n  };\r\n\r\n  const onMovieClick = id => {\r\n    history.push(`./movie/${id}`);\r\n  };\r\n\r\n  const showTitle = query && movies.length > 0;\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <InputForm\r\n        placeholder={\"Search for a movie...\"}\r\n        onChange={onQueryChange}\r\n      />\r\n\r\n      {query && (\r\n        <Loader show={fetchStatus === FETCH_STATUSES.FETCHING}>\r\n          {fetchStatus === FETCH_STATUSES.COMPLETE && (\r\n            <Fragment>\r\n              {showTitle && <h3>Showing Movies: {query}</h3>}\r\n              <ResultsList\r\n                results={movies}\r\n                resultItem={({ id, title }) => (\r\n                  <MovieItem\r\n                    key={`movieItem${id}`}\r\n                    id={id}\r\n                    title={title}\r\n                    onClick={onMovieClick}\r\n                  />\r\n                )}\r\n                page={page}\r\n                resultsPerPage={DEFAULT_RESULTS_AMOUNT}\r\n                onPaginationChange={setPage}\r\n                totalResults={totalResults}\r\n                totalPages={totalPages}\r\n                noResultsText={\"No movies found.\"}\r\n                hasError={hasError}\r\n                errorMessage={\"Oops something went wrong, please try again.\"}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </Loader>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst pixelSize = {\r\n  small: 100,\r\n  medium: 200,\r\n  large: 300\r\n};\r\n\r\nconst MovieImage = ({ path, size }) => (\r\n  <Fragment>\r\n    <img src={`https://image.tmdb.org/t/p/w${pixelSize[size]}/${path}`} />\r\n  </Fragment>\r\n);\r\n\r\nMovieImage.defaultProps = {\r\n  size: \"medium\"\r\n};\r\n\r\nMovieImage.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"])\r\n};\r\n\r\nexport default MovieImage;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MovieImage from \"components/movie-image\";\r\n\r\nconst MovieDescription = ({ title, overview, posterPath }) => (\r\n  <Fragment>\r\n    {title && (\r\n      <Fragment>\r\n        <h3>Title:</h3>\r\n        {title}\r\n      </Fragment>\r\n    )}\r\n    {overview && (\r\n      <Fragment>\r\n        <h3>About:</h3>\r\n        {overview}\r\n      </Fragment>\r\n    )}\r\n    {posterPath && (\r\n      <Fragment>\r\n        <h3>Image:</h3>\r\n        <MovieImage path={posterPath} />\r\n      </Fragment>\r\n    )}\r\n  </Fragment>\r\n);\r\n\r\nMovieDescription.defaultProps = {\r\n  title: \"\",\r\n  overview: \"\",\r\n  posterPath: \"\"\r\n};\r\n\r\nMovieDescription.propTypes = {\r\n  title: PropTypes.string,\r\n  overview: PropTypes.string,\r\n  posterPath: PropTypes.string\r\n};\r\n\r\nexport default MovieDescription;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome/index\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport styles from \"./withGoBack.module.scss\";\r\n\r\nconst withBackArrow = ({ withText, className, ...props }) => WrappedComponent => ({\r\n  history\r\n}) => (\r\n  <div className={className}>\r\n    <div className={styles.goBack} onClick={() => history.goBack()}>\r\n      <FontAwesomeIcon icon={faArrowLeft} size={\"1x\"} />\r\n      {withText && <p className={styles.goBackText}>Go back</p>}\r\n    </div>\r\n    <WrappedComponent {...props} />\r\n  </div>\r\n);\r\n\r\nwithBackArrow.defaultProps = {\r\n  withText: false\r\n};\r\n\r\nwithBackArrow.propTypes = {\r\n  withText: PropTypes.bool,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withBackArrow;\r\n","import { useState } from \"react\";\r\nimport { API_KEY, BASE_URL, FETCH_STATUSES } from \"utils/constants\";\r\n\r\nconst useMovie = () => {\r\n  const [movie, setMovie] = useState({});\r\n  const [fetchStatus, setFetchStatus] = useState(FETCH_STATUSES.READY);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  const modelResponse = response => {\r\n    const { title, overview, poster_path } = response;\r\n    return { title, overview, posterPath: poster_path };\r\n  };\r\n\r\n  const handleSetResponse = response => {\r\n    setMovie(modelResponse(response));\r\n  };\r\n\r\n  const getMovie = id => {\r\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\r\n    setFetchStatus(FETCH_STATUSES.FETCHING);\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        setFetchStatus(FETCH_STATUSES.COMPLETE);\r\n        if (response.status_code === 34) {\r\n          setNotFound(true);\r\n        }\r\n        handleSetResponse(response);\r\n      })\r\n      .catch(err => {\r\n        setFetchStatus(FETCH_STATUSES.COMPLETE);\r\n        // handle other error actions here\r\n        setHasError(true);\r\n      });\r\n  };\r\n\r\n  return { movie, getMovie, fetchStatus, hasError, notFound };\r\n};\r\n\r\nexport default useMovie;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport MovieDescription from \"components/movie-description\";\r\nimport Loader from \"components/loader\";\r\nimport withBackArrow from \"hocs/withBackArrow\";\r\nimport useMovie from \"hooks/useMovie\";\r\n\r\nimport { FETCH_STATUSES } from \"utils/constants\";\r\nimport styles from \"./MoviePage.module.scss\";\r\n\r\nconst MoviePage = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const { movie, getMovie, fetchStatus, hasError, notFound } = useMovie();\r\n  const { overview, posterPath, title } = movie;\r\n\r\n  useEffect(() => {\r\n    getMovie(id);\r\n  }, [id]);\r\n\r\n  return (\r\n    <Loader show={fetchStatus === FETCH_STATUSES.FETCHING}>\r\n      {fetchStatus === FETCH_STATUSES.COMPLETE && (\r\n        <MovieDescription\r\n          overview={overview}\r\n          posterPath={posterPath}\r\n          title={title}\r\n        />\r\n      )}\r\n      {hasError && <h3>There was an error, please try again.</h3>}\r\n      {notFound && (\r\n        <h3>\r\n          Movie not found. Click\r\n          <span className={styles.link} onClick={() => history.goBack()}> here</span> to go back\r\n        </h3>\r\n      )}\r\n    </Loader>\r\n  );\r\n};\r\n\r\nexport default withBackArrow({ withText: true, className: styles.root })(\r\n  MoviePage\r\n);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport styles from \"./Header.module.scss\"\r\n\r\nconst Header = () => (\r\n    <div className={styles.root}>\r\n        <NavLink to=\"/search\">\r\n            <h1 className={styles.title} >Movie Universe</h1>\r\n        </NavLink>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React, { Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NotFoundPage = () => (\r\n  <Fragment>\r\n    Oops this page doesn't exist. Click <NavLink to={\"./\"}> here </NavLink> to\r\n    go to the homepage.\r\n  </Fragment>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport SearchPage from \"pages/search-page\";\r\nimport MoviePage from \"pages/movie-page\";\r\nimport Header from \"components/header\";\r\nimport NotFoundPage from \"pages/not-found-page\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Redirect to=\"/search\" />} />\r\n          <Route exact path=\"/movie-search\" render={() => <Redirect to=\"/search\" />} />\r\n          <Route path=\"/search\" component={SearchPage} />\r\n          <Route path=\"/movie/:id\" component={MoviePage} />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/styles.scss\";\r\nimport App from \"./pages/app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contained\":\"Loader_contained__3xlTO\",\"image\":\"Loader_image__1z8IK\",\"blue\":\"Loader_blue__1dP5O\",\"darkBlue\":\"Loader_darkBlue__OjVYV\",\"small\":\"Loader_small__226zT\",\"medium\":\"Loader_medium__2mexX\",\"large\":\"Loader_large__3CeB9\"};"],"sourceRoot":""}